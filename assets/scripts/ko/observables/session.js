define(["knockout","toast","http","socket","app/utils/parseCredits","app/utils/formatDate"],function(ko,toast,http,socket,parseCredits,formatDate){return function(data){var self=this;self.id=ko.observable(data.id),self.type=ko.observable("time"),self.remaining_time_seconds=ko.pureComputed(function(){return self.time_seconds()-self.running_time_seconds()}),self.time_seconds=ko.observable(data.time_seconds),self.running_time_seconds=ko.observable(data.running_time_seconds),self.status=ko.observable(data.status),self.charging_port_id=ko.observable(data.charging_port_id),self.can_pause=ko.observable(data.can_pause),self.is_owned=ko.observable(data.is_owned),self.expiration_date=data.expiration_date,self.running=ko.observable("running"===data.status);var hh,mm,formatted_time="",t=self.remaining_time_seconds();function paddStart(i){return 2<=(i+="").length?i:"0"+i}formatted_time=0<t?(mm=hh=0,3600<t&&(t-=3600*(hh=parseInt(t/3600))),60<t&&(t-=60*(mm=parseInt(t/60))),ko.observable("<span class='calc-font'>"+paddStart(hh)+":"+paddStart(mm)+":"+paddStart(t)+"</span>")):ko.observable("<span class='calc-font'>00:00:00</span>"),self.formatted_time=ko.observable(formatted_time),self.formatted_expiry_date=data.expiration_date?formatDate(data.expiration_date):"N/A",self.starting=ko.observable(!1),self.startSession=function(opts,cb){self.starting(!0),http.post("/charging-plugin/session/"+data.id+"/start",opts,function(err,data){self.starting(!1),err?http.catchError(err):self.status("running"),"function"==typeof cb&&cb(err,data)})},self.pausing=ko.observable(!1),self.pauseSession=function(opts){self.pausing(!0),http.post("/charging-plugin/session/"+data.id+"/pause",opts,function(err){return self.pausing(!1),err?http.catchError(err):void self.status("available")})}}});